from telethon import events
from .. import loader, utils
import asyncio
import re
import os
import time


class banan(loader.Module):
    """
    –ú–æ–¥—É–ª—å –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –±–∞–Ω–∞ ü•µ –∏–∑-–∑–∞ —Ä–∞—Å—Å—ã–ª–∫–∏ –æ—Ç @j_0_k_e.
    """
    strings = {"name": "rassil"}

    def __init__(self):
        self.chats_file = "chats_list.txt"
        self.chats = self.load_chats()
        self.message_to_send = None
        self.interval = 10  # –ò–Ω—Ç–µ—Ä–≤–∞–ª –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –≤ –º–∏–Ω—É—Ç–∞—Ö
        self.running = False  # –°—Ç–∞—Ç—É—Å —Ä–∞—Å—Å—ã–ª–∫–∏
        self.last_sent_time = {}  # –í—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–æ –∫–∞–∂–¥–æ–º—É —á–∞—Ç—É

    async def client_ready(self, client, db):
        self.client = client

    def load_chats(self):
        """–ó–∞–≥—Ä—É–∂–∞–µ—Ç —Å–ø–∏—Å–æ–∫ —á–∞—Ç–æ–≤ –∏–∑ —Ñ–∞–π–ª–∞."""
        if os.path.exists(self.chats_file):
            with open(self.chats_file, "r") as file:
                return [line.strip() for line in file.readlines() if line.strip()]
        return []

    def save_chats(self):
        """–°–æ—Ö—Ä–∞–Ω—è–µ—Ç —Å–ø–∏—Å–æ–∫ —á–∞—Ç–æ–≤ –≤ —Ñ–∞–π–ª."""
        with open(self.chats_file, "w") as file:
            file.write("\n".join(self.chats))

    async def resolve_chat_info(self, chat):
        """
        –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç @username –∏–ª–∏ chat_id –≤ –ø–æ–ª–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —á–∞—Ç–µ.
        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä–æ–∫—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ: "ID | @username | –ù–∞–∑–≤–∞–Ω–∏–µ".
        """
        try:
            entity = await self.client.get_entity(chat)
            chat_id = str(entity.id)
            chat_username = f"@{entity.username}" if entity.username else "Unknown"
            chat_title = entity.title if hasattr(entity, "title") and entity.title else "Unknown"
            return f"{chat_id} | {chat_username} | {chat_title}"
        except Exception as e:
            raise ValueError(f"–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —á–∞—Ç–µ: {e}")

    async def refresh_message(self):
        async def refresh_message(self):
        """
        –ü–µ—Ä–µ—Å–æ—Ö—Ä–∞–Ω—è–µ—Ç —Ç–µ–∫—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏.
        –≠—Ç–æ –ø—Ä–æ–¥–ª–µ–≤–∞–µ—Ç —Å—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è —Å—Å—ã–ª–∫–∏ –Ω–∞ –º–µ–¥–∏–∞ (–µ—Å–ª–∏ –µ—Å—Ç—å –≤–ª–æ–∂–µ–Ω–∏–µ).
        –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–ª—è—é—Ç—Å—è –æ—Ç–¥–µ–ª—å–Ω–æ –≤ "–ò–∑–±—Ä–∞–Ω–Ω–æ–µ", —á—Ç–æ–±—ã –Ω–µ –ø–µ—Ä–µ–∑–∞–ø–∏—Å—ã–≤–∞—Ç—å –∏—Å—Ö–æ–¥–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.
        –ü—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —É–¥–∞–ª—è–µ—Ç—Å—è.
        """
        if self.message_to_send:
            try:
                # –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –µ—Å–ª–∏ –æ–Ω–æ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
                if hasattr(self, "previous_message") and self.previous_message:
                    await self.previous_message.delete()

                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –º–µ–¥–∏–∞
                if self.message_to_send.media:
                    updated_message = await self.client.send_file(
                        "me", self.message_to_send.media, caption=self.message_to_send.text
                    )
                else:
                    updated_message = await self.client.send_message(
                        "me", self.message_to_send.text
                    )

                # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª—ë–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏
                self.message_to_send = updated_message

                # –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–∞–∫ –ø—Ä–µ–¥—ã–¥—É—â—É—é –≤–µ—Ä—Å–∏—é
                self.previous_message = updated_message

                # –£–≤–µ–¥–æ–º–ª—è–µ–º –æ–± —É—Å–ø–µ—à–Ω–æ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏
                await self.client.send_message(
                    "me", "<b>–°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–æ –¥–ª—è –ø—Ä–æ–¥–ª–µ–Ω–∏—è —Å—Ä–æ–∫–∞ –¥–µ–π—Å—Ç–≤–∏—è.</b>"
                )
                print("–°–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–æ.")
            except Exception as e:
                # –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É –≤ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
                await self.client.send_message(
                    "me", f"<b>–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è:</b> {e}"
                )
                print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")

    @loader.command()
    async def sxr(self, message):
        """- —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏ (–∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ)"""
        reply = await message.get_reply_message()
        if not reply:
            await message.edit("<b>–ù–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —ç—Ç—É –∫–æ–º–∞–Ω–¥—É –≤ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ.</b>")
            return
        self.message_to_send = reply
        await message.edit("<b>–°–æ–æ–±—â–µ–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏.</b>")

    @loader.command()
    async def psxr(self, message):
        """- –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–æ—Ö—Ä. —Å–æ–æ –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏"""
        if not self.message_to_send:
            await message.edit("<b>–°–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏ –Ω–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ.</b>")
        else:
            await self.client.send_message(message.chat_id, self.message_to_send)

    @loader.command()
    async def chatss(self, message):
        """- –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø–∏—Å–æ–∫ —á–∞—Ç–æ–≤ –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏"""
        if not self.chats:
            await message.edit("<b>–°–ø–∏—Å–æ–∫ —á–∞—Ç–æ–≤ –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏ –ø—É—Å—Ç.</b>")
            return

        chat_list = "\n".join(self.chats)
        max_length = 4000  # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ª–∏–º–∏—Ç –¥–ª–∏–Ω—ã —Å–æ–æ–±—â–µ–Ω–∏—è (–Ω–µ–º–Ω–æ–≥–æ –º–µ–Ω—å—à–µ 4096 –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏)
        
        if len(chat_list) > max_length:
            parts = [chat_list[i:i+max_length] for i in range(0, len(chat_list), max_length)]
            for part in parts:
                await self.client.send_message(message.chat_id, f"<b>–°–ø–∏—Å–æ–∫ —á–∞—Ç–æ–≤ –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏:</b>\n<code>{part}</code>")
            await message.delete()
        else:
            await message.edit(f"<b>–°–ø–∏—Å–æ–∫ —á–∞—Ç–æ–≤ –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏:</b>\n<code>{chat_list}</code>")

    @loader.command()
    async def adchat(self, message):
        """- –¥–æ–±–∞–≤–ª—è–µ—Ç —Ç–æ—Ç —á–∞—Ç –≤ –∫–æ—Ç–æ—Ä–æ–º –Ω–∞–ø–∏—Å–∞–ª–∏ —ç—Ç—É –∫–æ–º–∞–Ω–¥—É –≤ —Å–ø–∏—Å–æ–∫ —á–∞—Ç–æ–≤ –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏"""
        try:
            chat = await message.get_chat()
            chat_id = str(chat.id)
            chat_username = f"@{chat.username}" if chat.username else "Unknown"
            chat_title = chat.title if chat.title else "Unknown"

            chat_info = f"{chat_id} | {chat_username} | {chat_title}"
            log_message = ""

            if chat_id not in [c.split(" | ")[0] for c in self.chats]:
                self.chats.append(chat_info)
                self.save_chats()
                log_message = f"<b>–£—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ:</b>\n<code>{chat_info}</code>"
            else:
                log_message = f"<b>–ß–∞—Ç —É–∂–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Å–ø–∏—Å–∫–µ:</b>\n<code>{chat_info}</code>"

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ª–æ–≥ –≤ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
            await self.client.send_message("me", log_message)
        except Exception as e:
            # –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É –≤ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
            error_message = f"<b>–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Ç–µ–∫—É—â–µ–≥–æ —á–∞—Ç–∞:</b> {e}"
            await self.client.send_message("me", error_message)
        finally:
            # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã
            await message.delete()

    @loader.command()
    async def dchat(self, message):
        """- –¥–æ–±–∞–≤–∏—Ç—å —á–∞—Ç –≤ —Å–ø–∏—Å–æ–∫ –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏ (–∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å @username –∏–ª–∏ chat_id)"""
        args = utils.get_args_raw(message)
        if not args:
            await message.edit("<b>–£–∫–∞–∂–∏—Ç–µ @username –∏–ª–∏ chat_id —á–∞—Ç–∞ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è.</b>")
            return

        try:
            chat_info = await self.resolve_chat_info(args)
            chat_id = chat_info.split(" | ")[0]
            if chat_id not in [c.split(" | ")[0] for c in self.chats]:
                self.chats.append(chat_info)
                self.save_chats()
                await message.edit(f"<b>–ß–∞—Ç –¥–æ–±–∞–≤–ª–µ–Ω –≤ —Å–ø–∏—Å–æ–∫ –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏:</b>\n<code>{chat_info}</code>")
            else:
                await message.edit(f"<b>–ß–∞—Ç —É–∂–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Å–ø–∏—Å–∫–µ –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏:</b>\n<code>{chat_info}</code>")
        except Exception as e:
            await message.edit(f"<b>–û—à–∏–±–∫–∞: {e}</b>")

    @loader.command()
    async def delchat(self, message):
        """- —É–¥–∞–ª–∏—Ç—å —á–∞—Ç –∏–∑ —Å–ø–∏—Å–∫–∞ –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏ (—á–µ—Ä–µ–∑ @username –∏–ª–∏ chat_id)"""
        args = utils.get_args_raw(message)
        if not args:
            await message.edit("<b>–£–∫–∞–∂–∏—Ç–µ @username –∏–ª–∏ chat_id —á–∞—Ç–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è.</b>")
            return

        try:
            chat_info = await self.resolve_chat_info(args)
            chat_id = chat_info.split(" | ")[0]
            if chat_id in [c.split(" | ")[0] for c in self.chats]:
                self.chats = [c for c in self.chats if not c.startswith(chat_id)]
                self.save_chats()
                await message.edit(f"<b>–ß–∞—Ç —É–¥–∞–ª—ë–Ω –∏–∑ —Å–ø–∏—Å–∫–∞ –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏:</b>\n<code>{chat_info}</code>")
            else:
                await message.edit(f"<b>–ß–∞—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Å–ø–∏—Å–∫–µ –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏:</b>\n<code>{chat_info}</code>")
        except Exception as e:
            await message.edit(f"<b>–û—à–∏–±–∫–∞: {e}</b>")

    @loader.command()
    async def dint(self, message):
        """- —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∏–Ω—Ç–µ—Ä–≤–∞–ª —Ä–∞—Å—Å—ã–ª–∫–∏ (–º–∏–Ω—É—Ç—ã)"""
        args = utils.get_args_raw(message)
        if not args or not args.isdigit():
            await message.edit("<b>–£–∫–∞–∂–∏—Ç–µ –∏–Ω—Ç–µ—Ä–≤–∞–ª –≤ –º–∏–Ω—É—Ç–∞—Ö.</b>")
            return
        self.interval = max(5, int(args))
        await message.edit(f"<b>–ò–Ω—Ç–µ—Ä–≤–∞–ª —Ä–∞—Å—Å—ã–ª–∫–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –Ω–∞ {self.interval} –º–∏–Ω—É—Ç.</b>")

    @loader.command()
    async def pint(self, message):
        """- –ø–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ç–µ—Ä–≤–∞–ª —Ä–∞—Å—Å—ã–ª–∫–∏"""
        await message.edit(f"<b>–¢–µ–∫—É—â–∏–π –∏–Ω—Ç–µ—Ä–≤–∞–ª —Ä–∞—Å—Å—ã–ª–∫–∏: {self.interval} –º–∏–Ω—É—Ç.</b>")

    @loader.command()
    async def rassil(self, message):
        """- –ù–∞—á–∞—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É –ø–æ —á–∞—Ç–∞–º"""
        if not self.message_to_send:
            await message.edit("<b>–ù–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏.</b>")
            return
        if not self.chats:
            await message.edit("<b>–°–ø–∏—Å–æ–∫ —á–∞—Ç–æ–≤ –ø—É—Å—Ç.</b>")
            return
        if self.running:
            await message.edit("<b>–†–∞—Å—Å—ã–ª–∫–∞ —É–∂–µ –∑–∞–ø—É—â–µ–Ω–∞.</b>")
            return

        await message.edit(f"<b>–†–∞—Å—Å—ã–ª–∫–∞ –∫–∞–∂–¥—ã–µ {self.interval} –º–∏–Ω—É—Ç...</b>")
        self.running = True

        try:
            while self.running:
                for chat in self.chats:
                    try:
                        chat_id = int(chat.split(" | ")[0])
                        if self.message_to_send.media:
                            await self.client.send_file(chat_id, self.message_to_send.media, caption=self.message_to_send.text)
                        else:
                            await self.client.send_message(chat_id, self.message_to_send.text)

                        print(f"–°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ —á–∞—Ç {chat_id}")
                    except Exception as e:
                        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤ —á–∞—Ç {chat}: {e}")
                        await self.client.send_message("me", f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤ —á–∞—Ç {chat}: {e}")
                        continue
                await self.refresh_message()
                await asyncio.sleep(self.interval * 60)
        except Exception as e:
            print(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ —Ä–∞—Å—Å—ã–ª–∫–∏: {e}")
            await self.client.send_message("me", f"–†–∞—Å—Å—ã–ª–∫–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –∏–∑-–∑–∞ –æ—à–∏–±–∫–∏: {str(e)}")
        finally:
            self.running = False

    @loader.command()
    async def stopr(self, message):
        """- –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É"""
        if self.running:
            self.running = False
            await message.edit("<b>–†–∞—Å—Å—ã–ª–∫–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞.</b>")
        else:
            await message.edit("<b>–†–∞—Å—Å—ã–ª–∫–∞ –Ω–µ –∞–∫—Ç–∏–≤–Ω–∞.</b>")

    @loader.command()
    async def uchats(self, message):
        """- –æ–±–Ω–æ–≤–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏—è –∏ —Ç–µ–≥–∏ –¥–ª—è —á–∞—Ç–æ–≤ –≤ —Å–ø–∏—Å–∫–µ"""
        if not self.chats:
            await message.edit("<b>–°–ø–∏—Å–æ–∫ —á–∞—Ç–æ–≤ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—É—Å—Ç.</b>")
            return

        updated_chats = []
        unresolved_chats = []  # –î–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è —á–∞—Ç–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –Ω–∞—á–∞–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
        await message.edit("<b>–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —á–∞—Ç–∞—Ö –Ω–∞—á–∞–ª–æ—Å—å...</b>")

        for chat in self.chats:
            try:
                parts = chat.split(" | ")
                chat_id = parts[0]

                # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —á–∞—Ç–µ (–ø–æ ID –∏–ª–∏ —Ç–µ–≥—É)
                entity = await self.client.get_entity(int(chat_id) if chat_id.isdigit() else chat_id)

                # –ò–∑–≤–ª–µ–∫–∞–µ–º –æ–±–Ω–æ–≤–ª—ë–Ω–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
                updated_chat_id = str(entity.id)
                updated_username = f"@{entity.username}" if entity.username else "Unknown"
                updated_title = entity.title if entity.title else "Unknown"

                updated_chats.append(f"{updated_chat_id} | {updated_username} | {updated_title}")
            except Exception as e:
                print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —á–∞—Ç–µ {chat}: {e}")
                unresolved_chats.append(chat)  # –î–æ–±–∞–≤–ª—è–µ–º –≤ —Å–ø–∏—Å–æ–∫ –ø—Ä–æ–±–ª–µ–º–Ω—ã—Ö —á–∞—Ç–æ–≤

        # –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ —á–∞—Ç–æ–≤
        self.chats = updated_chats
        self.save_chats()

        # –°–æ–æ–±—â–µ–Ω–∏–µ –æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏
        result_message = "<b>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —á–∞—Ç–∞—Ö —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∞.</b>"
        if unresolved_chats:
            unresolved_list = "\n".join(unresolved_chats)
            result_message += f"\n<b>–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å —Å–ª–µ–¥—É—é—â–∏–µ —á–∞—Ç—ã:</b>\n<code>{unresolved_list}</code>"

        await message.edit(result_message)
